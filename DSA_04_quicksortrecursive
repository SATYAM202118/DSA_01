#include <iostream>
using namespace std;
void swap(int *num1,int *num2){
    int temp = *num1;
    *num1=*num2;
    *num2 = temp;
}
int partition(int Arr[], int first, int last) { 
    int x = Arr[last]; 
    int i = (first - 1); 
    for (int j = first; j <= last - 1; j++) { 
        if (Arr[j] <= x) { 
            i++; 
            swap(&Arr[i], &Arr[j]); 
        } 
    } 
    swap(&Arr[i + 1], &Arr[last]); 
    return (i + 1); 
}
void quickSortrecursive(int Arr[], int first, int last){
    if (first < last){
        int q = partition(Arr,first,last);
        quickSortrecursive(Arr, first, q - 1);
        quickSortrecursive(Arr, q + 1, last);
    }
}
int main(){
    int Arr[] = {2,5,6,1,3,4};
    int n = sizeof(Arr)/sizeof(Arr[0]);
    quickSortrecursive(Arr,0,n-1);
    for(int i=0;i<n;i++)
    cout<<Arr[i]<<" ";
    return 0;
}
